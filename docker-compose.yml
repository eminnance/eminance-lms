# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: backend # Use an image built from the specified dockerfile in the `backend` directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/eminancedb
      SPRING_DATASOURCE_USERNAME: eminance-username
      SPRING_DATASOURCE_PASSWORD: eminance-password
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service
  app-client:
    build:
      context: frontend # Use an image built from the specified dockerfile in the `frontend` directory.
      dockerfile: Dockerfile
    ports:
      - "8081:80" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend

  # Database Service (Postgre)
  db:
    image: postgres
    container_name: eminancedb
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: eminance-username
      POSTGRES_PASSWORD: eminance-password
      POSTGRES_DB: eminancedb
    networks:
      - backend  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: eminance-username@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: eminance-password
    networks:
      - backend
    ports:
      - 8082:80
# Networks to be created to facilitate communication between containers
# trigger workflow 3
networks:
  backend:
  frontend:  
